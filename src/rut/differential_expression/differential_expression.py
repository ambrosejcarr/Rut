
class DifferentialExpression:

    def __init__(self):
        """simple mixin class to support creation of results property and saving of
        results.

        Note: future complexity is expected to increase, as this mixin should also
        be the entry point for plotting methods.

        """
        self.result_ = None

    # # todo implement me
    # def volcano_plot(self):
    #     """generate a volcano plot from results, using the method in rut.plot
    #
    #     :return:
    #     """
    #     raise NotImplementedError

    def save(self, filename):
        """standard method for saving the results objects generated by the fit() method
        of an inheriting class. The results object will be saved as a gzipped .csv file,
        and the .gz suffix will be added to filename if it is not included.

        :param str filename: filehandle to save results in

        :return None:
        """
        if self.result_ is None:
            raise ValueError('run fit() before results can be saved.')
        if not filename.endswith('.gz'):
            filename += '.gz'
        self.result_.to_csv(filename, compression='gzip')
